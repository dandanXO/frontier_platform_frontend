variables:
  NODE_OPTIONS: '--max_old_space_size=4096'

stages:
  - dependency_scan
  - build
  - deploy

# Note: Skip main merge build to save Gitlab cloud Compute Minutes
# platform-merge-build:
#   image: node:20.18.0
#   stage: build
#   rules:
#     - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
#   script:
#     - npm install -g pnpm
#     - pnpm i
#     - npm run test
#     - cd ./projects/platform
#     - npm run build --mode=development

dependency_scanning:
  image: node:20
  stage: dependency_scan
  tags:
    - saas-linux-medium-amd64
  variables:
    # 若需要排除 node_modules 或其他目錄，可以設定 DS_EXCLUDED_PATHS
    DS_EXCLUDED_PATHS: 'node_modules'
  before_script:
    - npm install -g pnpm
  script:
    - echo "Running pnpm audit..."
    - pnpm audit --json > pnpm-audit.json || true
    # 此處您可以加入自訂腳本解析 pnpm-audit.json，轉換成 GitLab 所需格式，
    # 或直接上傳此報告供後續參考
    - cat pnpm-audit.json
  allow_failure: true
  artifacts:
    paths:
      - pnpm-audit.json
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
      when: always
    - when: never

platform-build:
  image: cypress/base:20.18.0
  stage: build
  tags:
    - saas-linux-medium-amd64
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
      variables:
        DEPLOY_ENV: 'development'
    - if: $CI_COMMIT_REF_NAME == "staging"
      variables:
        DEPLOY_ENV: 'staging'
    - if: $CI_COMMIT_REF_NAME == "feat"
      variables:
        DEPLOY_ENV: 'feat'
    - if: $CI_COMMIT_REF_NAME == "pre-production"
      variables:
        DEPLOY_ENV: 'pre-production'
    - if: $CI_COMMIT_TAG
      variables:
        DEPLOY_ENV: 'production'
  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H gitlab.com >> ~/.ssh/known_hosts
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com".insteadOf "https://gitlab.com"
  script:
    - git submodule sync --recursive
    - git submodule update --init --recursive
    - rm -rf node_modules/.vite
    - rm -rf node_modules/.cache
    - apt-get update && apt-get install curl -y
    - npm install -g pnpm
    - pnpm i
    - npm run test
    - if [ "$DEPLOY_ENV" == "pre-production" ]; then npm run test:e2e --mode=pre-production; fi
    # - npm run test:e2e --mode=development
    - cd ./projects/platform
    - npm run build --mode=$DEPLOY_ENV
  artifacts:
    paths:
      - projects/platform/dist/

platform-deploy-to-dev:
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  stage: deploy
  tags:
    - saas-linux-medium-amd64
  only:
    refs:
      - main
  script:
    - cd ./projects/platform
    - bash ./scripts/deploy.sh development

platform-deploy-to-staging:
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  stage: deploy
  tags:
    - saas-linux-medium-amd64
  only:
    refs:
      - staging
  script:
    - cd ./projects/platform
    - bash ./scripts/deploy.sh staging

platform-deploy-to-feat:
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  stage: deploy
  tags:
    - saas-linux-medium-amd64
  only:
    refs:
      - feat
  script:
    - cd ./projects/platform
    - bash ./scripts/deploy.sh feat

platform-deploy-to-pre-production:
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  stage: deploy
  tags:
    - saas-linux-medium-amd64
  only:
    refs:
      - pre-production
  script:
    - cd ./projects/platform
    - bash ./scripts/deploy.sh pre-production

platform-deploy-to-prod:
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  stage: deploy
  tags:
    - saas-linux-medium-amd64
  only:
    refs:
      - tags
  script:
    - export VITE_APP_AG_GRID_LICENSE_KEY_BASE64_ENCODED=$AG_GRID_LICENSE_KEY_BASE64_ENCODED
    - cd ./projects/platform
    - bash ./scripts/deploy.sh production

storybook-build:
  stage: build
  tags:
    - saas-linux-medium-amd64
  image: node:20.18.0
  only:
    refs:
      - main
    changes:
      - packages/ui-component/**/*
  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H gitlab.com >> ~/.ssh/known_hosts
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com".insteadOf "https://gitlab.com"
  script:
    - git submodule sync --recursive
    - git submodule update --init --recursive
    - rm -rf node_modules/.vite
    - rm -rf node_modules/.cache
    - npm install -g pnpm
    - pnpm i
    - cd ./packages/ui-component
    - npm run build
  artifacts:
    paths:
      - packages/ui-component/storybook-static/

storybook-deploy:
  stage: deploy
  tags:
    - saas-linux-medium-amd64
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  only:
    refs:
      - main
    changes:
      - packages/ui-component/**/*
  script:
    - cd ./packages/ui-component
    - bash ./deploy.sh
