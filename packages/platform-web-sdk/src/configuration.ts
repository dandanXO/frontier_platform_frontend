/* tslint:disable */
/* eslint-disable */
/**
 * Frontier Platform API
 *  ## Authentication This API uses token authentication (Bearer in HTTP Header). First you retrieve a new Bearer token using sign-in apis. After that you can use it to access other resources.  **Bearer token example**  `eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjMxMyIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL2VtYWlsYWRkcmVzcyI6ImJyaWFuY2hvdTczMTBAZ21haWwuY29tIiwiZXhwIjoxNjI4NTE4OTgzLCJpc3MiOiJodHRwczovL3RleHRpbGUtd2ViYXBpLmZyb250aWVyLmNvb2wiLCJhdWQiOiJodHRwczovL3RleHRpbGUtd2ViYXBpLmZyb250aWVyLmNvb2wifQ.PNu0iU3x0QrGTjARx7W93B5Lsc8HRApdnHgTnTtOAr4`  ## Status codes This API uses HTTP status codes to communicate with the API. + `200 OK` - Response to a successful GET, PUT, PATCH or DELETE. + `400 Bad Request` - Malformed request; request body validation errors. + `401 Unauthorized` - When no or invalid authentication details are provided. + `403 Forbidden` - When authentication succeeded but authenticated user doesn\'t have access to the resource. + `415 Unsupported Media Type` - the server refuses to accept the request because the payload format is in an unsupported format ## Roles Each API endpoint has described minimal role to access. Only users with specific roles can access those endpoints. For insufficient role `403 Forbidden` HTTP response will be returned.  User roles:    + `11111 (Org Owner)` - the organization owner    + `222222 (Group Owner)` - the group owner  ## Representation of dates and times All exchange of date and time-related data MUST be done according to `Unix Timestamp` and stored in `UTC+0`. All dates in the API are numbers in the following format: `1628503326`.   ## pagination  > --- 
 *
 * The version of the OpenAPI document: 2.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export interface ConfigurationParameters {
    apiKey?: string | Promise<string> | ((name: string) => string) | ((name: string) => Promise<string>);
    username?: string;
    password?: string;
    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string) | ((name?: string, scopes?: string[]) => Promise<string>);
    basePath?: string;
    serverIndex?: number;
    baseOptions?: any;
    formDataCtor?: new () => any;
}

export class Configuration {
    /**
     * parameter for apiKey security
     * @param name security name
     * @memberof Configuration
     */
    apiKey?: string | Promise<string> | ((name: string) => string) | ((name: string) => Promise<string>);
    /**
     * parameter for basic security
     *
     * @type {string}
     * @memberof Configuration
     */
    username?: string;
    /**
     * parameter for basic security
     *
     * @type {string}
     * @memberof Configuration
     */
    password?: string;
    /**
     * parameter for oauth2 security
     * @param name security name
     * @param scopes oauth2 scope
     * @memberof Configuration
     */
    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string) | ((name?: string, scopes?: string[]) => Promise<string>);
    /**
     * override base path
     *
     * @type {string}
     * @memberof Configuration
     */
    basePath?: string;
    /**
     * override server index
     *
     * @type {number}
     * @memberof Configuration
     */
    serverIndex?: number;
    /**
     * base options for axios calls
     *
     * @type {any}
     * @memberof Configuration
     */
    baseOptions?: any;
    /**
     * The FormData constructor that will be used to create multipart form data
     * requests. You can inject this here so that execution environments that
     * do not support the FormData class can still run the generated client.
     *
     * @type {new () => FormData}
     */
    formDataCtor?: new () => any;

    constructor(param: ConfigurationParameters = {}) {
        this.apiKey = param.apiKey;
        this.username = param.username;
        this.password = param.password;
        this.accessToken = param.accessToken;
        this.basePath = param.basePath;
        this.serverIndex = param.serverIndex;
        this.baseOptions = param.baseOptions;
        this.formDataCtor = param.formDataCtor;
    }

    /**
     * Check if the given MIME is a JSON MIME.
     * JSON MIME examples:
     *   application/json
     *   application/json; charset=UTF8
     *   APPLICATION/JSON
     *   application/vnd.company+json
     * @param mime - MIME (Multipurpose Internet Mail Extensions)
     * @return True if the given MIME is JSON, false otherwise.
     */
    public isJsonMime(mime: string): boolean {
        const jsonMime: RegExp = new RegExp('^(application\/json|[^;/ \t]+\/[^;/ \t]+[+]json)[ \t]*(;.*)?$', 'i');
        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');
    }
}
